package shape;

import shapeInterface.Plane2D;

/* ====================================================================== */
/**
 * @brief 図形の平行四辺形を表すクラス
 *
 * @note このクラスは抽象クラスShapeから派生したクラス
 * 具体的な平行四辺形図形は、このクラスで実装する
 * 
 * @see Shape
 */
/* ====================================================================== */
public class Parallelogram extends Shape implements Plane2D {
	
	/* ====フィールド==== */
	private int mWidth; //平行四辺形の幅
	private int mHeight; //平行四辺形の高さ
	
	/* ====コンストラクタ====================================================== */
	/**
	 * @param width 幅 , height 高さ
	 * 
	 * @note 平行四辺形の幅、高さを受け取るコンストラクタ
	 */
	/* ====================================================================== */
	public Parallelogram(int width , int height){
		//幅をセット
		mWidth = width;
		//高さをセット
		mHeight = height;
	}
	
	/* ====================================================================== */
	/**
	 * @brief 平行四辺形の図形情報を表す文字列を返却する
	 *
	 * @param
	 *
	 * @return 
	 *
	 * @note
	 * 
	 */
	/* ====================================================================== */
	public String toString(){
		//平行四辺形の図形情報を文字列で返却
		return "Parallelogram(width:" + mWidth + " / height:" + mHeight + ")";
	}
	
	/* ====================================================================== */
	/**
	 * @brief 平行四辺形を描写する実装メソッド
	 *
	 * @param
	 *
	 * @return 
	 *
	 * @note
	 * 描画はアスタリスク「＊」を並べることで行う
	 * 
	 */
	/* ====================================================================== */
	public void draw(){
		int tmpSpace = mHeight - 1; //平行四辺形の辺のズレスペース（初期値 = 図形高さ - 1）
		
		//インスタンスの高さの分だけ周回する
		for (int i = 0 ; i < mHeight ; i++){
			//インスタンスの幅の分だけ”＊”を描写する
			for (int j = 0 ; j < mWidth ; j++){
				
				//ずれスペース分空白を確保する
				for(int k = 0 ; k < tmpSpace ; k++){
					System.out.print("　");
				}
				//アスタリスクを出力
				System.out.print('＊');
			}
			//１行出力したタイミングで改行
			System.out.println();
			
			//ズレスペースを１減算
			tmpSpace--;
		}
	}
	/* ====================================================================== */
	/**
	 * @brief 図形の面積を返却する実装メソッド
	 *
	 * @param
	 *
	 * @return 面積
	 *
	 * @note
	 * 
	 */
	/* ====================================================================== */
	@Override
	public int getArea() {
		// 面積を返却
		return mWidth * mHeight;
	}
}
