package shape;


/* ====================================================================== */
/**
 * @brief 図形の長方形を表すクラス
 *
 * @note このクラスは抽象クラスShapeから派生したクラス
 * 具体的な長方形図形は、このクラスで実装する
 * 
 * @see Shape
 */
/* ====================================================================== */
public class Rectangle extends Shape{
	
	/* ====フィールド==== */
	private int mWidth; //長方形の幅
	private int mHeight; //長方形の高さ
	
	/* ====コンストラクタ====================================================== */
	/**
	 * @param width 幅 , height 高さ
	 * 
	 * @note 長方形の幅、高さを受け取るコンストラクタ
	 */
	/* ====================================================================== */
	public Rectangle(int width , int height){
		//幅をセット
		mWidth = width;
		//高さをセット
		mHeight = height;
	}
	
	/* ====================================================================== */
	/**
	 * @brief 長方形の図形情報を表す文字列を返却する
	 *
	 * @param
	 *
	 * @return 
	 *
	 * @note
	 * 
	 */
	/* ====================================================================== */
	public String toString(){
		//長方形の図形情報を文字列で返却
		return "Rectangle(width:" + mWidth + "height:" + mHeight + ")";
	}
	
	/* ====================================================================== */
	/**
	 * @brief 長方形を描写する実装メソッド
	 *
	 * @param
	 *
	 * @return 
	 *
	 * @note
	 * 描画はアスタリスク「＊」を並べることで行う
	 * 
	 */
	/* ====================================================================== */
	public void draw(){
		//インスタンスの高さの分だけ周回する
		for (int i = 0 ; i < mHeight ; i++){
			//インスタンスの幅の分だけ”＊”を描写する
			for (int j = 0 ; j < mWidth ; j++){
				//アスタリスクを出力
				System.out.print('＊');
			}
			//１行出力したタイミングで改行
			System.out.println();
		}
	}
	
	
	
}
